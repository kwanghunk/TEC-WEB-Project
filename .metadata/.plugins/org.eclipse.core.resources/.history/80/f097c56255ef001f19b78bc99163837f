package com.tecProject.tec.service;

import java.time.LocalDateTime;
import java.util.Optional;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import com.tecProject.tec.domain.UserSupport;
import com.tecProject.tec.domain.UserSupport.InquiryCategory;
import com.tecProject.tec.repository.SupportRepository;

@Service
public class AdminSupportService {
	private final SupportRepository supportRepository;
	
	public AdminSupportService(SupportRepository supportRepository) {
		this.supportRepository = supportRepository;
	}
	
    // 문의내역 전체조회(관리자)
	public Page<UserSupport> getFilteredInquiries(Pageable pageable, InquiryCategory category, String keyword) {
	    if (category != null && keyword != null) { // 카테고리 + 키워드 조회
	        return supportRepository.findByCategoryAndTitleContainingAndIsDeleted(category, keyword, "N", pageable);
	    } else if (category != null) { // 카테고리 조회
	        return supportRepository.findByCategoryAndIsDeleted(category, "N", pageable);
	    } else if (keyword != null) { // 키워드 조회
	        return supportRepository.findByTitleContainingAndIsDeleted(keyword, "N", pageable);
	    } // 기본 전체 조회
	    return supportRepository.findByIsDeleted("N", pageable); 
	}

	// 문의내역 상세조회(관리자)
	public Optional<UserSupport> getInquiryById(int inquiryNo) {
		Optional<UserSupport> inquiry = supportRepository.findById(inquiryNo);
		if (inquiry.isPresent()) {
			return inquiry;
		}
		return Optional.empty();
	}

	
	public Optional<UserSupport> addReply(int inquiryNo, String username, boolean isAdmin, String replyContent) {
	    Optional<UserSupport> parentInquiryOpt = supportRepository.findById(inquiryNo);
	    if (parentInquiryOpt.isEmpty()) {
	        return Optional.empty();
	    }
	    UserSupport parentInquiry = parentInquiryOpt.get();
	    
	    // 문의 작성자 또는 관리자만 답변 작성 가능
	    if (!isAdmin && !parentInquiry.getUsername().equals(username)) {
	        return Optional.empty();
	    }
	    UserSupport reply = UserSupport.builder()
	            .username(username)
	            .title("RE: " + parentInquiry.getTitle()) // 답글 제목
	            .content(replyContent)
	            .status("진행 중")
	            .parentInquiry(parentInquiry)
	            .createdDate(LocalDateTime.now())
	            .isDeleted("N")
	            .category(parentInquiry.getCategory())
	            .build();

	    parentInquiry.getReplies().add(reply);
	    parentInquiry.setStatus("진행 중"); // 최초 답변 등록 시 상태 변경
	    supportRepository.save(parentInquiry);

	    return Optional.of(reply);
	}

}
