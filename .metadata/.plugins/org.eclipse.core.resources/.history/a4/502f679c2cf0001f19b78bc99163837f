package com.tecProject.tec.service;

import java.util.Comparator;
import java.util.List;
import java.util.Optional;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import com.tecProject.tec.domain.UserSupport;
import com.tecProject.tec.domain.UserSupport.InquiryCategory;
import com.tecProject.tec.dto.support.AdminSupportDetailDTO;
import com.tecProject.tec.repository.SupportRepository;

@Service
public class AdminSupportService {
	private final SupportRepository supportRepository;
	
	public AdminSupportService(SupportRepository supportRepository) {
		this.supportRepository = supportRepository;
	}
	
    // 문의내역 전체조회(관리자)
	public Page<UserSupport> getFilteredInquiries(Pageable pageable, InquiryCategory category, String keyword) {
	    if (category != null && keyword != null) { // 카테고리 + 키워드 조회
	        return supportRepository.findByCategoryAndTitleContainingAndIsDeletedAndParentInquiryIsNull(category, keyword, "N", pageable);
	    } else if (category != null) { // 카테고리 조회
	        return supportRepository.findByCategoryAndIsDeletedAndParentInquiryIsNull(category, "N", pageable);
	    } else if (keyword != null) { // 키워드 조회
	        return supportRepository.findByTitleContainingAndIsDeletedAndParentInquiryIsNull(keyword, "N", pageable);
	    } // 기본 전체 조회
	    return supportRepository.findByIsDeletedAndParentInquiryIsNull("N", pageable); 
	}

	// 문의내역 상세조회(관리자)
	public Optional<AdminSupportDetailDTO> getInquiryById(int inquiryNo) { 
        Optional<UserSupport> inquiry = supportRepository.findById(inquiryNo);
        if (inquiry.isEmpty()) {
            return Optional.empty();
        } 
        if ("Y".equals(inquiry.get().getIsDeleted())) {
        	return Optional.empty();
        }
        UserSupport userinquiry = inquiry.get(); 
         // 답글 정렬
        List<AdminSupportDetailDTO> sortedReplies = userinquiry.getReplies().stream()
                .sorted(Comparator.comparing(UserSupport::getCreatedDate)) // 최신 답글이 위로 .reversed()
                .map(AdminSupportDetailDTO::fromEntity)
                .toList();

        // DTO 변환 (답글 포함)
        AdminSupportDetailDTO inquiryDTO = AdminSupportDetailDTO.fromEntity(userinquiry); 
        inquiryDTO.setReplies(sortedReplies); // 정렬된 답글 추가

        return Optional.of(inquiryDTO); 

    }

}
