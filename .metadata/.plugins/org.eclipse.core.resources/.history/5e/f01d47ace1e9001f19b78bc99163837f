package com.tecProject.tec.controller;

import java.util.Map;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.tecProject.tec.auth.IpUtil;
import com.tecProject.tec.auth.JWTUtil;
import com.tecProject.tec.service.IpService;
import com.tecProject.tec.service.TranslationService;

import jakarta.servlet.http.HttpServletRequest;
import lombok.RequiredArgsConstructor;

@RestController
@RequestMapping("/api/ip")
public class IpController {
	
	private final IpService ipService;
	private final IpUtil ipUtil;
	
	public IpController(IpService ipService, IpUtil ipUtil) {
		this.ipService = ipService;
		this.ipUtil = ipUtil;
	}
	
	// 회원, 비회원 확인 - 비회원의 경우 IP반환
    @GetMapping("/check")
    public ResponseEntity<?> checkUserIdentity(
    		@RequestHeader(name = "Authorization", required = false) String authHeader,
            HttpServletRequest request) {
    	
        try {
            // Access Token이 존재하면 회원 → 즉시 응답 (IP 확인 불필요)
            if (authHeader != null && authHeader.startsWith("Bearer ")) {
                return ResponseEntity.ok(Map.of("isMember", true, "message", "✅ 회원 인증 완료"));
            }
            
            // Access Token이 없으면 비회원 → IP 획득 후 응답 반환
            String ipAddress = ipUtil.getClientIp(request);  // IP 주소 가져오기
            Map<String, Object> response = Map.of( // 응답 데이터 구성
                "ip", ipAddress,
                "isMember", false,
                "message", "비회원 - IP 획득 완료"
            );

            return ResponseEntity.ok().body(response);
        } catch (Exception e) {
            e.printStackTrace();
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(Map.of(
                "message", "🚨 서버 오류 발생",
                "error", e.getMessage()
            ));
        }
    }
}