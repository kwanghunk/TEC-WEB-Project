package com.tecProject.tec.auth;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.mockito.Mockito.when;

import java.util.Map;

import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.springframework.data.redis.core.RedisTemplate;
import org.springframework.data.redis.core.StringRedisTemplate;
import org.springframework.http.ResponseEntity;

import com.tecProject.tec.controller.LoginController;

public class RefreshTokenTest {

	@Mock
	private StringRedisTemplate redisTemplate;
	
	@Mock
	private LoginController loginController;
	
	private String tokenFamily;
	private String accessToken;
	private String refreshToken;
	
	@Test
	void testRefreshTokenRotation() {
		when(redisTemplate.opsForValue().get("tokenFamily")).thenReturn(refreshToken);
		
		ResponseEntity<?> response = loginController.refreshAccessToken(refreshToken);
		
		assertEquals(200, response.getStatusCodeValue());
		
		@SuppressWarnings("unchecked")
		Map<String, String> responseBody = (Map<String, String>) response.getBody();
		assertNotNull(responseBody.get("accessToken"));
		assertNotNull(responseBody.get("refreshToken"));
	}
	
	@Test
	void testRefreshTokenReuseDetection() {
		when(redisTemplate.opsForValue().get("tokenFamily")).thenReturn(null); // 이미 사용된 Refresh Token
		
	    ResponseEntity<?> response = loginController.refreshAccessToken(refreshToken);

	    assertEquals(401, response.getStatusCodeValue());
	}
}
